<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.yoribogo.mapper.MemberMapper">
        <insert id="insert">
                <choose>
                        <when test="memberPassword == null">
                                INSERT INTO TBL_MEMBER(ID, MEMBER_NAME, MEMBER_LOGIN_CODE, MEMBER_KAKAO_EMAIL, MEMBER_KAKAO_PROFILE_URL)
                                VALUES(SEQ_MEMBER.NEXTVAL, #{memberName}, #{memberLoginCode}, #{memberKakaoEmail}, #{memberKakaoProfileUrl})
                        </when>
                        <otherwise>
                                INSERT INTO TBL_MEMBER(ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_LOGIN_CODE)
                                VALUES(SEQ_MEMBER.NEXTVAL, #{memberEmail}, #{memberPassword}, #{memberName}, #{memberLoginCode})
                        </otherwise>
                </choose>
        </insert>

        <select id="selectByLogin" resultType="memberVO">
                SELECT ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_PROFILE_NAME, MEMBER_PROFILE_PATH, MEMBER_STATUS, MEMBER_LOGIN_CODE, MEMBER_KAKAO_EMAIL, MEMBER_KAKAO_PROFILE_URL,MEMBER_BACKGROUND_NAME,MEMBER_BACKGROUND_PATH,MEMBER_ONE_LINE_INTRO,MEMBER_INTRODUCTION
                FROM TBL_MEMBER
                WHERE MEMBER_EMAIL = #{memberEmail} AND MEMBER_PASSWORD = #{memberPassword}
        </select>

        <select id="selectByEmail" resultType="memberVO">
                SELECT ID, MEMBER_EMAIL, MEMBER_PASSWORD,MEMBER_Name
                FROM TBL_MEMBER
                WHERE MEMBER_EMAIL = #{memberEmail}
        </select>

        <update id="update">
                UPDATE TBL_MEMBER
                SET MEMBER_PASSWORD = #{memberPassword}
                WHERE MEMBER_EMAIL = #{memberEmail}
        </update>

        <select id="selectKaKao" resultType="memberVO">
                SELECT ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_PROFILE_NAME, MEMBER_PROFILE_PATH, MEMBER_STATUS, MEMBER_LOGIN_CODE, MEMBER_KAKAO_EMAIL, MEMBER_KAKAO_PROFILE_URL
                FROM TBL_MEMBER
                WHERE MEMBER_KAKAO_EMAIL = #{memberKakaoEmail}
        </select>

        <update id="updateKaKaoProfile">
                UPDATE TBL_MEMBER
                SET MEMBER_KAKAO_PROFILE_URL = #{memberKakaoProfileUrl}
                WHERE MEMBER_KAKAO_EMAIL = #{memberKakaoEmail}
        </update>

        <delete id="delete">
                DELETE FROM TBL_MEMBER
                WHERE ID = #{id}
        </delete>

        <update id="updateBySync">
                UPDATE TBL_MEMBER
                SET MEMBER_KAKAO_EMAIL = #{memberKakaoEmail}, MEMBER_KAKAO_PROFILE_URL = #{memberKakaoProfileUrl}, MEMBER_LOGIN_CODE = 'KAKAO'
                WHERE ID = #{id}
        </update>

        <select id="kakaEmail" resultType="memberVO">
                SELECT MEMBER_KAKAO_EMAIL ,MEMBER_EMAIL FROM TBL_MEMBER
        </select>

        <update id="updateALL">
        UPDATE TBL_POST
        SET MEMBER_ID = #{newMemberId}
        WHERE MEMBER_ID = #{oldMemberId}
        </update>

        <update id="updatePurchase">
           UPDATE TBL_PURCHASE
           SET MEMBER_ID=#{newMemberId}
           WHERE MEMBER_ID =#{oldMemberId}
        </update>

        <update id="updateLike">
                UPDATE TBL_LIKE
                SET MEMBER_ID=#{newMemberId}
                WHERE MEMBER_ID =#{oldMemberId}
        </update>

        <update id="updateComment">
                UPDATE TBL_COMMENT
                SET MEMBER_ID=#{newMemberId}
                WHERE MEMBER_ID =#{oldMemberId}
        </update>

        <select id="select" resultType="memberDTO">
                SELECT M.ID,P.ID AS POST_ID ,P.POST_TITLE, P.POST_CONTENT, P.POST_COMMENT_COUNT, M.MEMBER_NAME, M.MEMBER_ONE_LINE_INTRO, M.MEMBER_BACKGROUND_PATH, M.MEMBER_INTRODUCTION, M.MEMBER_BACKGROUND_NAME, M.MEMBER_PROFILE_NAME, M.MEMBER_PROFILE_PATH,P.POST_HITS,P.POST_DATE,M.MEMBER_EMAIL,P.POST_LIKE_COUNT,
                PF.POST_FILE_UUID,PF.POST_FILE_NAME,PF.POST_FILE_PATH,C.CATEGORY_C_NAME,B.CATEGORY_B_NAME
                FROM TBL_MEMBER M
                JOIN TBL_POST P ON M.ID = P.MEMBER_ID
                JOIN TBL_POST_FILE PF ON P.ID = PF.POST_ID
                JOIN TBL_CATEGORY_C C ON P.CATEGORY_C_ID = C.ID
                JOIN TBL_CATEGORY_B B ON C.CATEGORY_B_ID =B.ID
                WHERE M.ID = #{id}
                ORDER BY P.POST_DATE DESC
        </select>

        <select id="selectIdJoin" resultType="memberVO">
                SELECT ID, MEMBER_EMAIL,MEMBER_KAKAO_EMAIL,MEMBER_PASSWORD, MEMBER_NAME,  MEMBER_KAKAO_PROFILE_URL,MEMBER_PROFILE_NAME,MEMBER_PROFILE_PATH,MEMBER_LOGIN_CODE,MEMBER_BACKGROUND_PATH,MEMBER_ONE_LINE_INTRO,MEMBER_INTRODUCTION
                FROM TBL_MEMBER
                WHERE ID=#{id}
        </select>

        <update id="increaseLikeCount" parameterType="map">
                UPDATE TBL_POST
                SET POST_LIKE_COUNT = POST_LIKE_COUNT + 1
                WHERE ID = #{id}
        </update>
        <update id="decreaseLikeCount" parameterType="map">
                UPDATE TBL_POST
                SET POST_LIKE_COUNT = POST_LIKE_COUNT - 1
                WHERE ID = #{id}
        </update>

</mapper>